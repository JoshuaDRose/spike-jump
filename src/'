"""
Personal Description:
Attempting to follow: https://coderslegacy.com/python/pygame-platformer-game-development/
The sort of 'goal' I guess one could say with this sort of project is to try and use object oriented programming 
with out making by own sprite class in which to inherit varoius other classes with, but instead to use pygame.sprite.Sprite.
I know several people such as fluffypotato who don't do this at all, but their reasoning is simply 'I never bothered' so I thought I would learn it
Not to say in any way that I'm better than others for using it, in fact more the polar opposite because I prefer to use things that are already done for me.
To give credit where credit is due, another reason dafluffy potato didn't want to use sprites 'and understandably so', is because he's been using pygame for a very long
time and in 1.3 PyGame was when sprites were introduced.

Author: CodersLegacy.com
Date: 2020

""" 

import os
import pygame

pygame.display.init()

SIZE = (700, 500)
SCREEN = pygame.display.set_mode(SIZE, 0, 32)
CLOCK = pygame.time.Clock()
FPS = 60
VEC = pygame.math.Vector2
ACC = 0.5
FRIC = -0.12

BLACK =   (0, 0, 0)
WHITE =   (255, 255, 255)
RED =   (255, 0, 0)
GREEN =   (0, 255, 0)
BLUE =    (0, 0, 255)
YELLOW =  (0, 255, 255)
ORANGE =  (255, 165, 0)
PINK =    (255, 192, 203)
PURPLE =  (106, 13, 173)
CYAN =    (0, 255, 255)
MAGENTA = (255, 0, 255)

pygame.display.set_caption(os.getcwd())

class Player(pygame.sprite.Sprite):
    """The player class which will be controlled."""
    def __init__(self):
        super().__init__()
        self.surf = pygame.Surface((30, 30))
        self.surf.fill(ORANGE)
        self.rect = self.surf.get_rect(center=(10, 420))

class Tile(pygame.sprite.Sprite):
    """Tile class will be for basic platform interaction with entities and particles."""
    def __init__(self, size):
        super().__init__()
        self.surf = pygame.Surface(size)
        self.surf.fill(PINK)
        self.center = tuple(i / 2 for i in size)
        self.rect = self.surf.get_rect(center=(self.center))



